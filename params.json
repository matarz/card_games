{"name":"Card Games","body":"![ScreenShot](http://img443.imageshack.us/img443/3213/20120418013533.jpg)\r\n\r\nThis is a proof of concept for using Object Oriented Programming in C++. The [assignment](http://web.cecs.pdx.edu/~karlaf/CS202_Fall09/Prog1.html) was to build a program that would provide general functionality for building one or more types of games (card games, boardgames, dice games, etc) and then use it to build a game as an example. I went with card games for a type and built a simple Uno game. Here is a snippet of the assignment:\r\n> For this program, I want you to design an Object Oriented Program using C++ that will allow an application programmer to easily implement one of the above games in software. So, although you should test this out with one of the games mentioned (or others)…the real goal is a more generalized set of software that would be useful to support many different games. Think of common operations that would be needed regardless of the game. Of course the media is important – is it a board game, dice, cards, words? This needs to be taken into account with your program.\r\n\r\nThe full assignment can be found [here](http://web.cecs.pdx.edu/~karlaf/CS202_Fall09/Prog1.html).\r\n\r\nWhen looking at the code, you would notice that general functionality include things that apply to most card games such as shuffling and dealing cards. Other functionality and game rules that are specific for a game are built into other classes. \r\n\r\nThere is also a design [document](https://github.com/matarz/card_games/blob/master/Design.doc) that describes how classes interact with each other and what they do. ","tagline":"A proof of concept for using OOP in c++","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}